{"version":3,"sources":["useFetch.js","usePut.js"],"names":["useFetch","isObject","obj","Object","prototype","toString","call","arg1","arg2","url","options","onMount","baseUrl","method","handleOptions","opts","timeout","rest","data","setData","loading","setLoading","error","setError","controller","fetchData","fArg1","fArg2","window","current","AbortController","signal","query","toLowerCase","body","JSON","stringify","response","fetch","json","err","text","name","get","post","patch","put","del","abort","request","delete","assign","usePut"],"mappings":"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","file":"usePut.js","sourceRoot":"../src","sourcesContent":["import 'idempotent-babel-polyfill' // so async await works ;)\nimport { useEffect, useState, useCallback, useRef } from 'react'\n\nconst isObject = obj => Object.prototype.toString.call(obj) === '[object Object]'\n\nexport function useFetch(arg1, arg2) {\n  let url = null\n  let options = {}\n  let onMount = false\n  let baseUrl = ''\n  let method = 'GET'\n\n  const handleOptions = opts => {\n    if (true) {\n      // take out all the things that are not normal `fetch` options\n      // need to take this out of scope so can set the variables below correctly\n      let { url, onMount, timeout, baseUrl, ...rest } = opts\n      options = rest\n    }\n    if (opts.url) url = opts.url\n    if (opts.onMount) onMount = opts.onMount\n    if (opts.method) method = opts.method\n    if (opts.baseUrl) baseUrl = opts.baseUrl\n  }\n\n  if (typeof arg1 === 'string') {\n    url = arg1\n    if (isObject(arg2)) handleOptions(arg2)\n  } else if (isObject(arg1)) {\n    handleOptions(arg1)\n  }\n\n  const [data, setData] = useState(null)\n  const [loading, setLoading] = useState(onMount)\n  const [error, setError] = useState(null)\n  const controller = useRef(null)\n\n  const fetchData = useCallback(method => async (fArg1, fArg2) => {\n      if ('AbortController' in window) {\n        controller.current = new AbortController()\n        options.signal = controller.current.signal\n      }\n\n      let query = ''\n      if (isObject(fArg1) && method.toLowerCase() !== 'get') {\n        options.body = JSON.stringify(fArg1)\n      } else if (baseUrl && typeof fArg1 === 'string') {\n        url = baseUrl + fArg1\n        if (isObject(fArg2)) options.body = JSON.stringify(fArg2)\n      }\n      if (typeof fArg1 === 'string' && typeof fArg2 === 'string') query = fArg2\n\n      try {\n        setLoading(true)\n        const response = await fetch(url + query, {\n          method,\n          ...options\n        })\n        let data = null\n        try {\n          data = await response.json()\n        } catch (err) {\n          data = await response.text()\n        }\n        setData(data)\n      } catch (err) {\n        if (err.name !== 'AbortError') setError(err)\n      } finally {\n        controller.current = null\n        setLoading(false)\n      }\n    },\n    [url]\n  )\n\n  const get = useCallback(fetchData('GET'))\n  const post = useCallback(fetchData('POST'))\n  const patch = useCallback(fetchData('PATCH'))\n  const put = useCallback(fetchData('PUT'))\n  const del = useCallback(fetchData('DELETE'))\n\n  const abort = () => {\n    controller.current && controller.current.abort()\n  }\n\n  const request = { get, post, patch, put, del, delete: del, abort }\n\n  useEffect(() => {\n    if (onMount) request[method.toLowerCase()]()\n  }, [])\n\n  return Object.assign([data, loading, error, request], { data, loading, error, request, abort, ...request })\n}\n\nexport default useFetch\n","import useFetch from './useFetch'\n\nexport const usePut = (url, options) => {\n  const { data, loading, error, put } = useFetch(url, {\n    method: 'PUT',\n    ...options\n  })\n  return Object.assign([ data, loading, error, put ], { data, loading, error, put })\n}"]}